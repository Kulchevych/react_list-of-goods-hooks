{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","sortType","setSortType","goods","sort","prev","next","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,QAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAK,UAAOT,GAElBS,EAAMC,MAAK,SAACC,EAAMC,GAChB,OAAQL,GACN,IAAK,OACH,OAAOI,EAAKE,cAAcD,GAC5B,IAAK,SACH,OAAOD,EAAKG,OAASF,EAAKE,OAC5B,QACE,OAAO,MAITT,GACFI,EAAMM,UAwBR,OACE,qBAAKC,UAAU,MAAf,SACIb,EAUE,qCACE,wBACEc,KAAK,SACLC,QAvBK,WACfV,EAAY,SAoBJ,iCAOA,wBACES,KAAK,SACLC,QA1BO,WACjBV,EAAY,WAuBJ,4BAOA,wBACES,KAAK,SACLC,QA9CI,WACdZ,GAAaD,IA2CL,qBAOA,wBACEY,KAAK,SACLC,QAjDE,WACZZ,GAAY,GACZE,EAAY,SA6CJ,mBAOA,oBAAIQ,UAAU,QAAd,SACGP,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,WAvCvC,wBACEH,KAAK,SACLC,QA3BI,WACZd,GAAW,IAwBL,sBC7DViB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.39d2d4ac.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState('none');\n\n  const goods = [...goodsFromServer];\n\n  goods.sort((prev, next) => {\n    switch (sortType) {\n      case 'alph':\n        return prev.localeCompare(next);\n      case 'length':\n        return prev.length - next.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const start = () => {\n    setStarted(true);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType('none');\n  };\n\n  const sortAlph = () => {\n    setSortType('alph');\n  };\n\n  const sortLength = () => {\n    setSortType('length');\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              onClick={sortAlph}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={sortLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}