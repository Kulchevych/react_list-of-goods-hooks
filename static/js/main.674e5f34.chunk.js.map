{"version":3,"sources":["components/GoodsInfo/GoodInfo.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodInfo","good","className","goodsFromServer","GoodsList","useState","isReversed","setReversed","sortType","setSortType","goods","sort","product1","product2","localeCompare","length","reverse","type","onClick","map","App","isStarted","setStarted","ReactDOM","render","document","getElementById"],"mappings":"oMAIaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,oBAAIC,UAAU,cAAd,SACGD,KCHDE,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAsB,WACjC,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAK,UAAOP,GAElBO,EAAMC,MAAK,SAACC,EAAUC,GACpB,OAAQL,GACN,IAAK,OACH,OAAOI,EAASE,cAAcD,GAChC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,OACpC,QACE,OAAO,MAITT,GACFI,EAAMM,UAsBR,OACE,qCACE,wBACEC,KAAK,SACLC,QAdW,WACfX,GAAY,GACZE,EAAY,SAUV,iCAOA,wBACEQ,KAAK,SACLC,QAhBa,WACjBX,GAAY,GACZE,EAAY,WAYV,4BAOA,wBACEQ,KAAK,SACLC,QArCU,WACdX,GAAaD,IAkCX,qBAOA,wBACEW,KAAK,SACLC,QAxCQ,WACZX,GAAY,GACZE,EAAY,SAoCV,mBAOA,oBAAIP,UAAU,QAAd,SACGQ,EAAMS,KAAI,SAAAlB,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,YCrFxBmB,EAAgB,WAC3B,MAAgCf,oBAAS,GAAzC,mBAAOgB,EAAP,KAAkBC,EAAlB,KAMA,OACE,qBAAKpB,UAAU,MAAf,SACImB,EAUE,cAAC,EAAD,IARA,wBACEJ,KAAK,SACLC,QAVI,WACZI,GAAW,IAOL,sBCZVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.674e5f34.chunk.js","sourcesContent":["type Props = {\n  good: string;\n};\n\nexport const GoodInfo: React.FC<Props> = ({ good }) => {\n  return (\n    <li className=\"Goods__item\">\n      {good}\n    </li>\n  );\n};\n","import { useState } from 'react';\nimport { GoodInfo } from '../GoodsInfo/GoodInfo';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const GoodsList: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState('none');\n\n  const goods = [...goodsFromServer];\n\n  goods.sort((product1, product2) => {\n    switch (sortType) {\n      case 'alph':\n        return product1.localeCompare(product2);\n      case 'length':\n        return product1.length - product2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType('none');\n  };\n\n  const sortAlph = () => {\n    setReversed(false);\n    setSortType('alph');\n  };\n\n  const sortLength = () => {\n    setReversed(false);\n    setSortType('length');\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={sortAlph}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={sortLength}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={reverse}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n\n      <ul className=\"Goods\">\n        {goods.map(good => (\n          <GoodInfo good={good} key={good} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n\n  const start = () => {\n    setStarted(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )\n        : (\n          <GoodsList />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}